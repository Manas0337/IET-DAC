Q) Reverse string with user defined function

#include <iostream>
#include <string>
using namespace std;

// User-defined function to reverse a string
string reverseString(string str) {
    int n = str.length();
    for (int i = 0; i < n / 2; i++) {
        // swap characters
        char temp = str[i];
        str[i] = str[n - i - 1];
        str[n - i - 1] = temp;
    }
    return str;
}

int main() {
    string input;

    cout << "Enter a string: ";
    getline(cin, input);   // take input with spaces also

    string reversed = reverseString(input);

    cout << "Reversed string: " << reversed << endl;

    return 0;
}
----------------------------------------------------------------------------------------------------
Q) Concatenation string with user defined function

#include <iostream>
#include <string>
using namespace std;

// User-defined function to concatenate two strings
string concatenateStrings(const string &str1, const string &str2) {
    return str1 + str2;  // uses the + operator of std::string
}

int main() {
    string first, second;

    cout << "Enter first string: ";
    getline(cin, first);   // take first string (with spaces)

    cout << "Enter second string: ";
    getline(cin, second);  // take second string (with spaces)

    // Call our user-defined function
    string result = concatenateStrings(first, second);

    cout << "Concatenated string: " << result << endl;

    return 0;
}
-------------------------------------------------------------------------------
Q) Copy string

#include <iostream>
#include <string>
using namespace std;

// User-defined function to copy a string
string copyString(const string &source) {
    string destination = source; // copy using assignment
    return destination;
}

int main() {
    string original;

    cout << "Enter a string: ";
    getline(cin, original);  // read string (with spaces too)

    // Call our user-defined function
    string copied = copyString(original);

    cout << "Copied string: " << copied << endl;

    return 0;
}
-------------------------------------------------------------------------
Q) 2nd max in 1D and 2D

#include <iostream>
using namespace std;

int main() {
    int n;
    cout << "Enter size of array: ";
    cin >> n;

    int arr[100];
    cout << "Enter elements:\n";
    for (int i = 0; i < n; i++) {
        cin >> arr[i];
    }

    int max1 = INT_MIN; // largest
    int max2 = INT_MIN; // second largest

    for (int i = 0; i < n; i++) {
        if (arr[i] > max1) {
            max2 = max1; // previous max becomes second max
            max1 = arr[i];
        } else if (arr[i] > max2 && arr[i] != max1) {
            max2 = arr[i];
        }
    }

    cout << "Second maximum element: " << max2 << endl;

    return 0;
}
---------------------------------------------------------------------------------------------------------
Q) Fibonacci

#include <iostream>
using namespace std;

int main() {
    int n;
    cout << "Enter number of terms: ";
    cin >> n;

    int a = 0, b = 1; // first two terms

    cout << "Fibonacci Series: ";

    for (int i = 1; i <= n; i++) {
        cout << a << " ";
        int next = a + b;
        a = b;
        b = next;
    }

    cout << endl;
    return 0;
}
-------------------------------------------------------------------------------------------------------
Q) Transpose Of Matrix
#include <iostream>
using namespace std;

int main() {
    int rows, cols;
    cout << "Enter number of rows: ";
    cin >> rows;
    cout << "Enter number of columns: ";
    cin >> cols;

    int matrix[10][10], transpose[10][10];

    // Input the matrix
    cout << "Enter elements of the matrix:\n";
    for (int i = 0; i < rows; i++) {
        for (int j = 0; j < cols; j++) {
            cin >> matrix[i][j];
        }
    }

    // Compute transpose
    for (int i = 0; i < rows; i++) {
        for (int j = 0; j < cols; j++) {
            transpose[j][i] = matrix[i][j];
        }
    }

    // Display the transpose
    cout << "Transpose of the matrix is:\n";
    for (int i = 0; i < cols; i++) {
        for (int j = 0; j < rows; j++) {
            cout << transpose[i][j] << " ";
        }
        cout << endl;
    }

    return 0;
}
-------------------------------------------------------------------------------------------------------
Q) Addition of Matrix

#include <iostream>
using namespace std;

int main() {
    int rows, cols;
    cout << "Enter number of rows and columns: ";
    cin >> rows >> cols;

    int matrix1[10][10], matrix2[10][10];

    // Input first matrix
    cout << "Enter elements of first matrix:\n";
    for (int i = 0; i < rows; i++)
        for (int j = 0; j < cols; j++)
            cin >> matrix1[i][j];

    // Input second matrix
    cout << "Enter elements of second matrix:\n";
    for (int i = 0; i < rows; i++)
        for (int j = 0; j < cols; j++)
            cin >> matrix2[i][j];

    // Add matrices and print result
    cout << "Sum of the matrices:\n";
    for (int i = 0; i < rows; i++) {
        for (int j = 0; j < cols; j++) {
            cout << matrix1[i][j] + matrix2[i][j] << " ";
        }
        cout << endl;
    }

    return 0;
}
-----------------------------------------------------------------------------------
Q) Multiplication of Matrix

#include <iostream>
using namespace std;

int main() {
    int rows1, cols1, rows2, cols2;
    cout << "Enter rows and columns of first matrix: ";
    cin >> rows1 >> cols1;

    cout << "Enter rows and columns of second matrix: ";
    cin >> rows2 >> cols2;

    if (cols1 != rows2) {
        cout << "Matrix multiplication not possible!" << endl;
        return 0;
    }

    int matrix1[10][10], matrix2[10][10], result[10][10] = {0};

    // Input first matrix
    cout << "Enter elements of first matrix:\n";
    for (int i = 0; i < rows1; i++)
        for (int j = 0; j < cols1; j++)
            cin >> matrix1[i][j];

    // Input second matrix
    cout << "Enter elements of second matrix:\n";
    for (int i = 0; i < rows2; i++)
        for (int j = 0; j < cols2; j++)
            cin >> matrix2[i][j];

    // Multiply matrices
    for (int i = 0; i < rows1; i++) {
        for (int j = 0; j < cols2; j++) {
            result[i][j] = 0;
            for (int k = 0; k < cols1; k++) {
                result[i][j] += matrix1[i][k] * matrix2[k][j];
            }
        }
    }

    // Display result
    cout << "Product of matrices:\n";
    for (int i = 0; i < rows1; i++) {
        for (int j = 0; j < cols2; j++) {
            cout << result[i][j] << " ";
        }
        cout << endl;
    }

    return 0;
}


----------------------------------------------------------------------------------------------------------
Q) Find 2nd max array

#include<iostream>
#include<climits>
using namespace std;
int main()
{
    int n;
    cout<<"Enter the Array"<<endl;
    cin>>n;

    int* arr = new int[n];
    
    int slarge = INT_MIN;
    int largest = INT_MIN;
    
    cout<<"Enter the array values"<<endl;
    
    for(int i=0 ; i<n ; i++)
    {
        cin>>arr[i];
    }
   

    for(int i=0; i<n ; i++)
    {
        if(arr[i] > largest)
        {
            slarge = largest;
            largest = arr[i];

        }
    else if(arr[i] > slarge && arr[i] != largest)
    {
        slarge > arr[i];
    }
}
cout<<"Second largest is:"<<slarge;
}
---------------------------------------------------------------------------------------------
Q) Swapping

#include <iostream>
using namespace std;

int main() {
    int a, b;
    cout << "Enter two numbers: ";
    cin >> a >> b;

    int temp = a;
    a = b;
    b = temp;

    cout << "After swapping: a = " << a << ", b = " << b << endl;
    return 0;
}

=========================================================================================
Q)Swapping without using temporary variable

#include <iostream>
using namespace std;

int main() {
    int a, b;
    cout << "Enter two numbers: ";
    cin >> a >> b;

    // Swapping without temp
    a = a + b;
    b = a - b;
    a = a - b;

    cout << "After swapping: a = " << a << ", b = " << b << endl;
    return 0;
}

